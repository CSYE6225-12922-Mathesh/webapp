name: Packer Build CI Workflow

on:
  workflow_run:
    workflows: ["CI Workflow"]
    types:
      - completed
  pull_request:
    types:
      - closed  
    branches:
      - main

jobs:
  build-image:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true 
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Change region if needed

  
      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: "latest"

      - name: Build Application Artifact
        run: |
          npm install 
          zip -r app.zip *
      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app-artifact
          path: app.zip

      - name: Download App Artifact
        uses: actions/download-artifact@v3
        with:
          name: app-artifact

      - name: Check if app.zip exists
        run: |
          if [ -f "app.zip" ]; then
            echo "app.zip found."
          else
            echo "app.zip not found."
            exit 1
          fi



      - name: Build Packer Image
        run: |
            
            packer init packer/packer.pkr.hcl
            packer build \
            -var "db_username=${{ secrets.DB_USERNAME }}" \
            -var "db_password=${{ secrets.DB_PASSWORD }}" \
            -var "db_name=${{ secrets.DB_NAME }}" \
            -var "db_port=${{ secrets.DB_PORT }}" \
            -var "port=${{ secrets.PORT }}" \
            -var "region=${{ secrets.AWS_REGION }}" \
            -var "source_ami=${{ secrets.AWS_SOURCE_AMI }}" \
            -var "subnet_id=${{ secrets.AWS_SUBNET_ID }}" \
            -var "vpc_id=${{ secrets.AWS_VPC_ID }}" \
            -var "demo_acc_id=${{ secrets.AWS_DEMO_ACC_ID }}" \
            packer/packer.pkr.hcl


      





      
